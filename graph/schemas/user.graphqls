extend type Query {
  User(id: ID!): User!
}

extend type Mutation {
  createUser(input: CreateUserInput!): User!
  updateUser(id: ID!, input: UpdateUserInput!): User!
  deleteUser(id: ID!): User!
}

input UsersQueryInput {
  after: Cursor
  first: Int
  before: Cursor
  last: Int
  orderBy: UserOrder
  where: UserWhereInput
}

extend type Subscription {
  users(event: Event!, query: UsersQueryInput): UserConnection!
  User(event: Event!, id: ID!): User!
}